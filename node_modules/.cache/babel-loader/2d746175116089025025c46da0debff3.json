{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imad\\\\Desktop\\\\ITIXI\\\\test\\\\src\\\\components\\\\Details\\\\Card\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, makeStyles, Typography } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // justifyContent: \"center\",\n    // alignItems: \"center\",\n    width: \"250px\",\n    height: \"350px\",\n    background: \"transparent\",\n    border: \"1px solid black\",\n    position: \"relative\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"65%\"\n  },\n  name: {\n    color: \"black\",\n    fontSize: \"21px\",\n    marginTop: \"5%\",\n    marginLeft: \"5%\",\n    fontWeight: \"400\"\n  },\n  artistname: {\n    color: \"gray\",\n    fontSize: \"12px\",\n    marginLeft: \"5%\",\n    fontWeight: \"300\"\n  }\n});\n\nconst Index = _ref => {\n  _s();\n\n  let {\n    img,\n    albumName,\n    numberOfTracks,\n    artistName,\n    date,\n    id,\n    token\n  } = _ref;\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const formatFollowers = n => {\n    let nf = Intl.NumberFormat();\n    return nf.format(n);\n  };\n\n  const handleClick = () => {\n    navigate(`/details`, {\n      state: {\n        token: token,\n        id: id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img.length > 0 ? img[0].url : null,\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.name,\n      children: albumName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.artistname,\n      children: artistName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.artistname,\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.artistname,\n      children: [numberOfTracks, \" tracks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: \"lightgray\",\n        position: \"absolute\",\n        bottom: 0,\n        widthL: \"100%\"\n      },\n      children: \"Preview on Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"pvfM4ZXsoMI5DaOvCNwyBjRqjLg=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","Button","makeStyles","Typography","Rating","useNavigate","useStyles","root","display","flexDirection","width","height","background","border","position","image","name","color","fontSize","marginTop","marginLeft","fontWeight","artistname","Index","img","albumName","numberOfTracks","artistName","date","id","token","classes","navigate","formatFollowers","n","nf","Intl","NumberFormat","format","handleClick","state","length","url","backgroundColor","bottom","widthL"],"sources":["C:/Users/imad/Desktop/ITIXI/test/src/components/Details/Card/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // justifyContent: \"center\",\r\n    // alignItems: \"center\",\r\n    width: \"250px\",\r\n    height: \"350px\",\r\n    background: \"transparent\",\r\n    border: \"1px solid black\",\r\n    position:\"relative\"\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"65%\",\r\n  },\r\n  name: {\r\n    color: \"black\",\r\n    fontSize: \"21px\",\r\n    marginTop: \"5%\",\r\n    marginLeft: \"5%\",\r\n    fontWeight: \"400\",\r\n  },\r\n  artistname: {\r\n    color: \"gray\",\r\n    fontSize: \"12px\",\r\n    marginLeft: \"5%\",\r\n    fontWeight: \"300\",\r\n  },\r\n});\r\nconst Index = ({img,albumName,numberOfTracks,artistName,date,id,token}) => {\r\n  const classes = useStyles();\r\n  const navigate=useNavigate()\r\n  const formatFollowers = (n) => {\r\n    let nf = Intl.NumberFormat();\r\n    return nf.format(n);\r\n  };\r\n  const handleClick=()=>{\r\n    navigate(`/details`,{state:{token:token,id:id}})\r\n  }\r\n  return (\r\n    <div className={classes.root} >\r\n      <img src={img.length>0?img[0].url:null} className={classes.image} />\r\n      <Typography className={classes.name}>{albumName}</Typography>\r\n      <Typography className={classes.artistname}>\r\n        {artistName}\r\n      </Typography>\r\n      <Typography className={classes.artistname}>\r\n        {date}\r\n      </Typography>\r\n      <Typography className={classes.artistname}>\r\n        {numberOfTracks} tracks\r\n      </Typography>\r\n      <Button style={{backgroundColor:\"lightgray\",position:\"absolute\",bottom:0,widthL:\"100%\"}} >Preview on Spotify</Button>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,QAA+C,mBAA/C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AACA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;EAC3BK,IAAI,EAAE;IACJC,OAAO,EAAE,MADL;IAEJC,aAAa,EAAE,QAFX;IAGJ;IACA;IACAC,KAAK,EAAE,OALH;IAMJC,MAAM,EAAE,OANJ;IAOJC,UAAU,EAAE,aAPR;IAQJC,MAAM,EAAE,iBARJ;IASJC,QAAQ,EAAC;EATL,CADqB;EAY3BC,KAAK,EAAE;IACLL,KAAK,EAAE,MADF;IAELC,MAAM,EAAE;EAFH,CAZoB;EAgB3BK,IAAI,EAAE;IACJC,KAAK,EAAE,OADH;IAEJC,QAAQ,EAAE,MAFN;IAGJC,SAAS,EAAE,IAHP;IAIJC,UAAU,EAAE,IAJR;IAKJC,UAAU,EAAE;EALR,CAhBqB;EAuB3BC,UAAU,EAAE;IACVL,KAAK,EAAE,MADG;IAEVC,QAAQ,EAAE,MAFA;IAGVE,UAAU,EAAE,IAHF;IAIVC,UAAU,EAAE;EAJF;AAvBe,CAAD,CAA5B;;AA8BA,MAAME,KAAK,GAAG,QAA6D;EAAA;;EAAA,IAA5D;IAACC,GAAD;IAAKC,SAAL;IAAeC,cAAf;IAA8BC,UAA9B;IAAyCC,IAAzC;IAA8CC,EAA9C;IAAiDC;EAAjD,CAA4D;EACzE,MAAMC,OAAO,GAAGzB,SAAS,EAAzB;EACA,MAAM0B,QAAQ,GAAC3B,WAAW,EAA1B;;EACA,MAAM4B,eAAe,GAAIC,CAAD,IAAO;IAC7B,IAAIC,EAAE,GAAGC,IAAI,CAACC,YAAL,EAAT;IACA,OAAOF,EAAE,CAACG,MAAH,CAAUJ,CAAV,CAAP;EACD,CAHD;;EAIA,MAAMK,WAAW,GAAC,MAAI;IACpBP,QAAQ,CAAE,UAAF,EAAY;MAACQ,KAAK,EAAC;QAACV,KAAK,EAACA,KAAP;QAAaD,EAAE,EAACA;MAAhB;IAAP,CAAZ,CAAR;EACD,CAFD;;EAGA,oBACE;IAAK,SAAS,EAAEE,OAAO,CAACxB,IAAxB;IAAA,wBACE;MAAK,GAAG,EAAEiB,GAAG,CAACiB,MAAJ,GAAW,CAAX,GAAajB,GAAG,CAAC,CAAD,CAAH,CAAOkB,GAApB,GAAwB,IAAlC;MAAwC,SAAS,EAAEX,OAAO,CAAChB;IAA3D;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAY,SAAS,EAAEgB,OAAO,CAACf,IAA/B;MAAA,UAAsCS;IAAtC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,UAAD;MAAY,SAAS,EAAEM,OAAO,CAACT,UAA/B;MAAA,UACGK;IADH;MAAA;MAAA;MAAA;IAAA,QAHF,eAME,QAAC,UAAD;MAAY,SAAS,EAAEI,OAAO,CAACT,UAA/B;MAAA,UACGM;IADH;MAAA;MAAA;MAAA;IAAA,QANF,eASE,QAAC,UAAD;MAAY,SAAS,EAAEG,OAAO,CAACT,UAA/B;MAAA,WACGI,cADH;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAYE,QAAC,MAAD;MAAQ,KAAK,EAAE;QAACiB,eAAe,EAAC,WAAjB;QAA6B7B,QAAQ,EAAC,UAAtC;QAAiD8B,MAAM,EAAC,CAAxD;QAA0DC,MAAM,EAAC;MAAjE,CAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA3BD;;GAAMtB,K;UACYjB,S,EACDD,W;;;KAFXkB,K;AA6BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}