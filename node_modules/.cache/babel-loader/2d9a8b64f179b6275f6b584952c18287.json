{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imad\\\\Desktop\\\\ITIXI\\\\test\\\\src\\\\components\\\\Details\\\\Card\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, makeStyles, Typography } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // justifyContent: \"center\",\n    // alignItems: \"center\",\n    width: \"250px\",\n    height: \"400px\",\n    background: \"transparent\",\n    border: \"1px solid black\",\n    position: \"relative\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"60%\"\n  },\n  name: {\n    color: \"black\",\n    fontSize: \"18px\",\n    marginTop: \"5%\",\n    marginLeft: \"5%\",\n    fontWeight: \"400\"\n  },\n  artistname: {\n    color: \"gray\",\n    fontSize: \"12px\",\n    marginLeft: \"5%\",\n    fontWeight: \"300\"\n  }\n});\n\nconst Index = _ref => {\n  _s();\n\n  let {\n    img,\n    albumName,\n    numberOfTracks,\n    artistName,\n    date,\n    id,\n    token,\n    url\n  } = _ref;\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const handleClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img.length > 0 ? img[0].url : null,\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.name,\n      children: albumName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.artistname,\n      children: artistName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.artistname,\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.artistname,\n      children: [numberOfTracks, \" tracks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: \"lightgray\",\n        position: \"absolute\",\n        bottom: 0,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url.spotify,\n        style: {\n          textDecoration: \"none\",\n          color: \"gray\"\n        },\n        children: \"    Preview on Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"pvfM4ZXsoMI5DaOvCNwyBjRqjLg=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","Button","makeStyles","Typography","Rating","useNavigate","useStyles","root","display","flexDirection","width","height","background","border","position","image","name","color","fontSize","marginTop","marginLeft","fontWeight","artistname","Index","img","albumName","numberOfTracks","artistName","date","id","token","url","classes","navigate","handleClick","length","backgroundColor","bottom","spotify","textDecoration"],"sources":["C:/Users/imad/Desktop/ITIXI/test/src/components/Details/Card/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // justifyContent: \"center\",\r\n    // alignItems: \"center\",\r\n    width: \"250px\",\r\n    height: \"400px\",\r\n    background: \"transparent\",\r\n    border: \"1px solid black\",\r\n    position: \"relative\",\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"60%\",\r\n  },\r\n  name: {\r\n    color: \"black\",\r\n    fontSize: \"18px\",\r\n    marginTop: \"5%\",\r\n    marginLeft: \"5%\",\r\n    fontWeight: \"400\",\r\n  },\r\n  artistname: {\r\n    color: \"gray\",\r\n    fontSize: \"12px\",\r\n    marginLeft: \"5%\",\r\n    fontWeight: \"300\",\r\n  },\r\n});\r\nconst Index = ({\r\n  img,\r\n  albumName,\r\n  numberOfTracks,\r\n  artistName,\r\n  date,\r\n  id,\r\n  token,\r\n  url,\r\n}) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = () => {};\r\n  return (\r\n    <div className={classes.root}>\r\n      <img src={img.length > 0 ? img[0].url : null} className={classes.image} />\r\n      <Typography className={classes.name}>{albumName}</Typography>\r\n      <Typography className={classes.artistname}>{artistName}</Typography>\r\n      <Typography className={classes.artistname}>{date}</Typography>\r\n      <Typography className={classes.artistname}>\r\n        {numberOfTracks} tracks\r\n      </Typography>\r\n      <Button\r\n        style={{\r\n          backgroundColor: \"lightgray\",\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n          <a href={url.spotify} style={{textDecoration:\"none\",color:\"gray\"}}>    Preview on Spotify</a>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,QAA+C,mBAA/C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AACA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;EAC3BK,IAAI,EAAE;IACJC,OAAO,EAAE,MADL;IAEJC,aAAa,EAAE,QAFX;IAGJ;IACA;IACAC,KAAK,EAAE,OALH;IAMJC,MAAM,EAAE,OANJ;IAOJC,UAAU,EAAE,aAPR;IAQJC,MAAM,EAAE,iBARJ;IASJC,QAAQ,EAAE;EATN,CADqB;EAY3BC,KAAK,EAAE;IACLL,KAAK,EAAE,MADF;IAELC,MAAM,EAAE;EAFH,CAZoB;EAgB3BK,IAAI,EAAE;IACJC,KAAK,EAAE,OADH;IAEJC,QAAQ,EAAE,MAFN;IAGJC,SAAS,EAAE,IAHP;IAIJC,UAAU,EAAE,IAJR;IAKJC,UAAU,EAAE;EALR,CAhBqB;EAuB3BC,UAAU,EAAE;IACVL,KAAK,EAAE,MADG;IAEVC,QAAQ,EAAE,MAFA;IAGVE,UAAU,EAAE,IAHF;IAIVC,UAAU,EAAE;EAJF;AAvBe,CAAD,CAA5B;;AA8BA,MAAME,KAAK,GAAG,QASR;EAAA;;EAAA,IATS;IACbC,GADa;IAEbC,SAFa;IAGbC,cAHa;IAIbC,UAJa;IAKbC,IALa;IAMbC,EANa;IAObC,KAPa;IAQbC;EARa,CAST;EACJ,MAAMC,OAAO,GAAG1B,SAAS,EAAzB;EACA,MAAM2B,QAAQ,GAAG5B,WAAW,EAA5B;;EAEA,MAAM6B,WAAW,GAAG,MAAM,CAAE,CAA5B;;EACA,oBACE;IAAK,SAAS,EAAEF,OAAO,CAACzB,IAAxB;IAAA,wBACE;MAAK,GAAG,EAAEiB,GAAG,CAACW,MAAJ,GAAa,CAAb,GAAiBX,GAAG,CAAC,CAAD,CAAH,CAAOO,GAAxB,GAA8B,IAAxC;MAA8C,SAAS,EAAEC,OAAO,CAACjB;IAAjE;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAY,SAAS,EAAEiB,OAAO,CAAChB,IAA/B;MAAA,UAAsCS;IAAtC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,UAAD;MAAY,SAAS,EAAEO,OAAO,CAACV,UAA/B;MAAA,UAA4CK;IAA5C;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,UAAD;MAAY,SAAS,EAAEK,OAAO,CAACV,UAA/B;MAAA,UAA4CM;IAA5C;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,UAAD;MAAY,SAAS,EAAEI,OAAO,CAACV,UAA/B;MAAA,WACGI,cADH;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAQE,QAAC,MAAD;MACE,KAAK,EAAE;QACLU,eAAe,EAAE,WADZ;QAELtB,QAAQ,EAAE,UAFL;QAGLuB,MAAM,EAAE,CAHH;QAIL3B,KAAK,EAAE;MAJF,CADT;MAAA,uBAQI;QAAG,IAAI,EAAEqB,GAAG,CAACO,OAAb;QAAsB,KAAK,EAAE;UAACC,cAAc,EAAC,MAAhB;UAAuBtB,KAAK,EAAC;QAA7B,CAA7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IARJ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAnCD;;GAAMM,K;UAUYjB,S,EACCD,W;;;KAXbkB,K;AAqCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}